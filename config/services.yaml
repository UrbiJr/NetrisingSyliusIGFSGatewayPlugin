# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    netrising.pag_online_imprese.payment_state_applicator:
    class: Netrising\SyliusIGFSGatewayPlugin\StateMachine\PaymentStateApplicator
    public: true
    arguments:
      $smFactory: '@sm.factory'

    netrising.pag_online_imprese.gataway.builder:
        class: Payum\Core\Bridge\Symfony\Builder\GatewayFactoryBuilder
        arguments:
        - Netrising\SyliusIGFSGatewayPlugin\Payum\SyliusPagOnlineImpreseFactory
        tags:
        - { name: payum.gateway_factory_builder, factory: sylius_payment }


    pag_online_imprese_bridge:
        class: Netrising\SyliusIGFSGatewayPlugin\Bridge\PagOnlineImpreseBridge

    Netrising\SyliusIGFSGatewayPlugin\Payum\Action\CaptureAction:
        public: true
        arguments:
        - '@pag_online_imprese_bridge'
        - '@doctrine.orm.entity_manager'
        tags:
        - { name: payum.action, factory: sylius_payment, alias: 'payum.action.capture' }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
